version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: onhcp-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: app
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: onhcp-backend
    restart: unless-stopped
    working_dir: /var/www/templan
    volumes:
      - ./backend:/var/www
    environment:
      # Laravel DB vars - ajuste no .env do Laravel para usar estes valores
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: app
      # Cloudflare R2/Stream (opcionais) - defina no ambiente do host ou num arquivo .env do Compose
      # Base da API Cloudflare e conta (para Stream/R2)
      CLOUDFLARE_API_BASE: ${CLOUDFLARE_API_BASE:-}
      CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID:-}
      # Token de API (NÃO COMITAR) - permissões para R2/Stream conforme necessidade
      CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN:-}
      # Bucket/URL público do R2 (para servir media)
      CLOUDFLARE_R2_BUCKET: ${CLOUDFLARE_R2_BUCKET:-}
      CLOUDFLARE_R2_PUBLIC_BASE_URL: ${CLOUDFLARE_R2_PUBLIC_BASE_URL:-}
      # Preferência de fonte de vídeo e base de embed do YouTube
      VIDEO_SOURCE_PRIORITY: ${VIDEO_SOURCE_PRIORITY:-cloudflare,youtube,local}
      YOUTUBE_EMBED_BASE: ${YOUTUBE_EMBED_BASE:-https://www.youtube.com/embed/}
    depends_on:
      mysql:
        condition: service_healthy
    expose:
      - "9000" # php-fpm

  nginx:
    image: nginx:alpine
    container_name: onhcp-nginx
    restart: unless-stopped
    ports:
      - "8080:80" # Acesse o Laravel em http://localhost:8080
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend

  soketi:
    image: quay.io/soketi/soketi:latest-16-alpine
    container_name: onhcp-soketi
    restart: unless-stopped
    environment:
      - DEBUG=1
      - SOKETI_DEFAULT_APP_ID=local
      - SOKETI_DEFAULT_APP_KEY=local-key
      - SOKETI_DEFAULT_APP_SECRET=local-secret
      - SOKETI_DEFAULT_APP_ENABLE_CLIENT_MESSAGES=true
      - SOKETI_DEFAULT_APP_ENABLE_USER_AUTHENTICATION=true
      - SOKETI_HOST=0.0.0.0
      - SOKETI_PORT=6001
    ports:
      - "6001:6001"
    depends_on:
      - backend

  reverb:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: onhcp-reverb
    restart: unless-stopped
    working_dir: /var/www/templan
    volumes:
      - ./backend:/var/www
    command: bash -lc "php artisan reverb:start --host=0.0.0.0 --port=6001"
    ports:
      - "6001:6001" # WebSocket
    depends_on:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: onhcp-frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev -- --host"
    ports:
      - "5173:5173" # Acesse o Vite em http://localhost:5173
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

volumes:
  db_data:
